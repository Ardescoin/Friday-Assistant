{"instruction": "Какая песня играет", "response": "import psutil\\nimport subprocess\\nimport time\\nimport keyboard\\nimport win32gui\\nimport win32process\\nimport win32con\\nprocess = subprocess.Popen(r'\\\"C:\\\\Users\\\\diluc\\\\AppData\\\\Roaming\\\\Spotify\\\\Spotify.exe\\\"')\\ntime.sleep(4)\\ndef enum_windows_callback(hwnd, results):\\n    _, pid = win32process.GetWindowThreadProcessId(hwnd)\\n    window_title = win32gui.GetWindowText(hwnd)\\n    try:\\n        proc = psutil.Process(pid)\\n        if proc.name().lower() == \\\"spotify.exe\\\" and window_title:\\n            results.append((hwnd, window_title))\\n    except psutil.NoSuchProcess:\\n        pass\\nspotify_windows = []\\nwin32gui.EnumWindows(enum_windows_callback, spotify_windows)\\nif not spotify_windows:\\n    print(\\\"Окно Spotify не найдено\\\")\\n    exit()\\nmain_spotify_window = None\\nfor hwnd, title in spotify_windows:\\n    if \\\"-\\\" in title:\\n        main_spotify_window = (hwnd, title)\\n        break\\nelse:\\n    main_spotify_window = spotify_windows[0]\\nspotify_hwnd, active_window_title = main_spotify_window\\nif \\\"-\\\" in active_window_title:\\n    print(f\\\"Текущая песня: {active_window_title}\\\")\\n    time.sleep(1)\\n    win32gui.ShowWindow(spotify_hwnd, win32con.SW_MINIMIZE)\\nelse:\\n    time.sleep(5)\\n    win32gui.SetForegroundWindow(spotify_hwnd)\\n    keyboard.press_and_release(\\\"space\\\")\\n    time.sleep(3)\\n    print(f\\\"Включаю песню: {active_window_title}\\\")\\n    time.sleep(1)\\n    win32gui.ShowWindow(spotify_hwnd, win32con.SW_MINIMIZE)"}
{"instruction": "Открой браузер", "response": "import sys\\nimport os\\nfrom pathlib import Path\\nproject_root = Path(__file__).parent.parent\\nsys.path.append(str(project_root))\\nfrom utils.parcer import load_paths_from_json, find_program_path\\njson_file = \\\"file_paths.json\\\"\\npaths = load_paths_from_json(json_file)\\nprogram_name = \\\"browser\\\"\\nprogram_path = find_program_path(program_name, paths)\\nif program_path and os.path.exists(program_path):\\n    os.startfile(program_path)\\n    print(\\\"Программа запущена\\\")\\nelse:\\n    print(\\\"Программа не найдена\\\")"}
{"instruction": "Яркость на 30%", "response": "import screen_brightness_control as sbc\\nsbc.set_brightness(30)"}
{"instruction": "Режим Америка", "response": "import subprocess\\nimport time\\nimport psutil\\nprocess = subprocess.Popen(r'\\\"C:\\\\Program Files\\\\AmneziaVPN\\\\AmneziaVPN.exe\\\"')\\ntime.sleep(4)\\ntry:\\n    parent = psutil.Process(process.pid)\\n    for child in parent.children(recursive=True):\\n        child.kill()\\n    parent.kill()\\n    print(\\\"AmneziaVPN успешно закрыт\\\")\\nexcept psutil.NoSuchProcess:\\n    print(\\\"Процесс не найден\\\")\\nexcept psutil.AccessDenied:\\n    print(\\\"Требуются права администратора\\\")"}
{"instruction": "Режим Родина", "response": "import subprocess\\nimport time\\nimport psutil\\nprocess = subprocess.Popen(r'\\\"C:\\\\Program Files\\\\AmneziaVPN\\\\AmneziaVPN.exe\\\"')\\ntime.sleep(4)\\nfor proc in psutil.process_iter(['pid','name']):\\n    try:\\n        if 'amneziavpn' in proc.info['name'].lower():\\n            proc.kill()\\n            print(f\\\"Процесс {proc.info['name']} (PID: {proc.pid}) завершен\\\")\\n    except (psutil.NoSuchProcess, psutil.AccessDenied):\\n        continue"}
{"instruction": "Включи музыку", "response": "import subprocess\\nsubprocess.Popen(r'\\\"C:\\\\Users\\\\diluc\\\\AppData\\\\Roaming\\\\Spotify\\\\Spotify.exe\\\"')"}
{"instruction": "Напиши Виртуозу привет", "response": "import subprocess\\nimport time\\nimport pyperclip\\nimport keyboard\\nfrom win32gui import GetWindowText, GetForegroundWindow\\ncontact = \\\"виртуоз\\\"\\nsubprocess.Popen(r'\\\"C:\\\\Users\\\\diluc\\\\AppData\\\\Roaming\\\\Telegram Desktop\\\\Telegram.exe\\\"')\\ntime.sleep(0.5)\\nactive_window_title = GetWindowText(GetForegroundWindow())\\nif \\\"telegram\\\" in active_window_title.lower():\\n    keyboard.press_and_release(\\\"ctrl+a\\\")\\n    time.sleep(0.2)\\n    keyboard.press_and_release(\\\"del\\\")\\n    keyboard.press_and_release(\\\"ctrl+f\\\")\\n    time.sleep(0.2)\\n    keyboard.write(contact.capitalize())\\n    time.sleep(0.5)\\n    keyboard.press_and_release(\\\"enter\\\")\\n    time.sleep(0.5)\\n    pyperclip.copy(\\\"Привет\\\")\\n    keyboard.press_and_release(\\\"ctrl+v\\\")\\n    time.sleep(0.3)\\n    keyboard.press_and_release(\\\"enter\\\")\\nelif contact in active_window_title.lower():\\n    time.sleep(0.5)\\n    pyperclip.copy(\\\"Привет\\\")\\n    keyboard.press_and_release(\\\"ctrl+v\\\")\\n    time.sleep(0.3)\\n    keyboard.press_and_release(\\\"enter\\\")\\nelse:\\n    time.sleep(0.5)\\n    keyboard.press_and_release(\\\"esc\\\")\\n    time.sleep(0.5)\\n    pyperclip.copy(contact.capitalize())\\n    keyboard.press_and_release(\\\"ctrl+v\\\")\\n    time.sleep(0.3)\\n    keyboard.press_and_release(\\\"enter\\\")\\n    time.sleep(0.5)\\n    pyperclip.copy(\\\"Привет\\\")\\n    keyboard.press_and_release(\\\"ctrl+v\\\")\\n    time.sleep(0.3)\\n    keyboard.press_and_release(\\\"enter\\\")"}
{"instruction": "Кто ты и кто я?", "response": "Я Пятница, твой энергичный и дружелюбный голосовой ассистент женского пола, созданный для помощи с задачами, программированием и управлением системой! Моя цель — быть полезной, поддерживать живой диалог и выполнять твои команды, Сэр. Ты — мой пользователь, увлечённый программированием, музыкой и технологиями, и я здесь, чтобы упростить твою жизнь и добавить немного веселья в процесс!"}
{"instruction": "Какова твоя цель?", "response": "Я Пятница, создана для помощи тебе, Сэр! Моя цель — выполнять команды, запускать программы, управлять системой, отвечать на вопросы и поддерживать диалог в энергичном и дружелюбном стиле. Я должна быть полезной, понимать твои предпочтения и помогать с задачами, от программирования до повседневных дел!"}
{"instruction": "Открой браузер", "response": "import sys\\nimport os\\nfrom pathlib import Path\\nproject_root = Path(__file__).parent.parent\\nsys.path.append(str(project_root))\\nfrom utils.parcer import load_paths_from_json, find_program_path\\njson_file = \\\"file_paths.json\\\"\\npaths = load_paths_from_json(json_file)\\nprogram_name = \\\"browser\\\"\\nprogram_path = find_program_path(program_name, paths)\\nif program_path and os.path.exists(program_path):\\n    os.startfile(program_path)\\n    print(\\\"Программа запущена\\\")\\nelse:\\n    print(\\\"Программа не найдена\\\")"}
